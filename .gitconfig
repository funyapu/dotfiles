[include]
  path = ~/.gitconfig.local
[core]
	excludesfile = ~/.gitignore_global
  autocrlf = input                 # CRLFを自動変換
	editor = vim -c \"set fenc=utf-8\"
[color]
  # colorの設定(以下のコマンドは自動で色つける)
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
[push]
  default = current
[alias]
  st = status
  sh = show
  so = remote show origin
  ft = fetch
  up = pull --rebase       # pull rebase
  rbm = rebase master      # masterへのrebaseはよく使うのでalias
  ad = add
  ci = commit -a           # modifiedなファイルを全てstageへ
  cc = commit -aC HEAD     # 直前のコミットメッセージを再利用してコミット
  cam = commit -a --amend  # 直前のcommitを修正
  cama = commit -a --amend  --no-edit
  cm = commit -ma
  co = checkout
  pu = push origin          #push
  puu = push upstream         #push
  pl = pull origin          #pull
  plu = pull upstream          #pull
  br-cleanup = town-prune-branches
  # branch関連
  br = branch
  ba = branch -a           # originも含めた全てのbranchを表示
  bm = branch --merged     # merge済みのbranchを表示
  bn = branch --no-merged  # mergeしてないbranchを表示
  # log関連
  wc = whatchanged         # logに変更されたファイルも一緒に出す
  ls = log --stat          # logに変更されたファイルも一緒に出す
  lp = log -p              # diffも一緒に出す
  la = log --pretty=\"format:%ad %h (%an): %s\" --date=short  # ざっくりログ出す
  lr = log origin          # originのlog
  oneline = log --pretty=oneline
  ranking = shortlog -s -n --no-merges
  # logをtree表示
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  # diff関連
  dm = diff master           # masterとのdiff
  dw = diff --color-words    # 単語単位でいろつけてdiff
  dc = diff --cached         # addされているものとのdiff
  ds = diff --staged         # 同上(1.6.1移行)
  d1 = diff HEAD~            # HEADから1つ前とdiff
  d2 = diff HEAD~~           # HEADから2つ前とdiff
  d3 = diff HEAD~~~          # HEADから3つ前とdiff
  d4 = diff HEAD~~~~         # HEADから4つ前とdiff
  d5 = diff HEAD~~~~~        # HEADから5つ前とdiff
  d10 = diff HEAD~~~~~~~~~~  # HEADから10前とdiff
  lola = log --graph --pretty=oneline --abbrev-commit --all --decorate

  
  # grep関連
  gr = grep
  gn = grep -n
# tree
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
	f = flow
	ff = flow feature
	fh = flow hotfix
	fr = flow release
	t = tag
[credential]
	helper = osxkeychain

[init]
  templatedir = ~/.git_template
[pr-release]
	token = 8dc548bfc11cb5a90e399fe272b7d534ddc918b2
